#!/usr/bin/bash
dir="$PWD"
scripts=( "set_up_for_gaming" "set_up_for_programming" "set_up_for_work" )
printf "What script do you want to run?\n"
select script in ${scripts[@]}; do
    eval "$script"
    break
done

set_up_for_gaming(){

    sudo pacman -S --needed wine-staging winetricks steam lutris giflib lib32-giflib libpng lib32-libpng libldap lib32-libldap gnutls lib32-gnutls \
	mpg123 lib32-mpg123 openal lib32-openal v4l-utils lib32-v4l-utils libpulse lib32-libpulse libgpg-error \
	lib32-libgpg-error alsa-plugins lib32-alsa-plugins alsa-lib lib32-alsa-lib libjpeg-turbo lib32-libjpeg-turbo \
	sqlite lib32-sqlite libxcomposite lib32-libxcomposite libxinerama lib32-libgcrypt libgcrypt lib32-libxinerama \
	ncurses lib32-ncurses ocl-icd lib32-ocl-icd libxslt lib32-libxslt libva lib32-libva gtk3 \
	lib32-gtk3 gst-plugins-base-libs lib32-gst-plugins-base-libs vulkan-icd-loader lib32-vulkan-icd-loader

    #INSTALL NVIDIA DRIVERS
    sudo pacman -S --needed nvidia-dkms nvidia-utils lib32-nvidia-utils nvidia-settings vulkan-icd-loader lib32-vulkan-icd-loader linux-headers

}

set_up_for_writing(){

    sudo pacman -S --needed texlive-most libreoffice llvm delve lldb
}

set_up_for_qemu_virtualization(){

    sudo pacman -S qemu virt-manager virt-viewer dnsmasq vde2 bridge-utils openbsd-netcat
}

install_xow(){

}
